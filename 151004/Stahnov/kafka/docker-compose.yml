version: "3.9"
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: distcomp
    ports:
      - "5432:5432"
    restart: unless-stopped

  cassandra:
    image: cassandra
    volumes:
      - ~/apps/cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=distcomp
      - CQLSH_PORT=9042
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29091:29091"
      - "29092:29092"
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LOCAL://host.docker.internal:29091, EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LOCAL:PLAINTEXT, EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LOCAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29091
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

  redis:
    image: "redis"
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - PASSWORD = redis
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  discussion:
    build:
      context: ./discussion
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "24130:24130"
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_started

  publicator:
    build:
      context: ./publicator
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=unsecureProd
    ports:
      - "24110:24110"
    depends_on:
      - postgres
      - kafka

