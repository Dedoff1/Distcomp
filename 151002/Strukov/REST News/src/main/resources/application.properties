spring.application.name=REST News
server.servlet.context-path=/api/v1.0
server.port=24110
app.notes-base-url=http://localhost:24130
app.notes-path=/api/v1.0/notes

spring.thymeleaf.check-template-location=false
spring.jpa.open-in-view=true

spring.datasource.url=jdbc:postgresql://localhost:5432/distcomp
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.default_schema=distcomp
spring.jpa.show-sql=true

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.type.mapping=note-in-event:by.bsuir.news.event.InTopicEvent
spring.kafka.consumer.properties.spring.json.type.mapping=note-out-event:by.bsuir.news.event.OutTopicEvent
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.topics.partitions=3
spring.kafka.topics.in-topic=inTopic
spring.kafka.topics.out-topic=outTopic

spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.repositories.enabled=true