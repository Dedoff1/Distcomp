version: '3.4'

services:
  publisher:
    image: ${DOCKER_REGISTRY-}publisher
    container_name: publisher
    build:
      context: .
      dockerfile: Distibuted_Computing/Dockerfile
    ports:
      - "24110:8080"
    depends_on:
      - postgres
      - redis
      - kafka

  postgres:
    image: postgres:alpine3.17
    container_name: postgres-publisher-service
    hostname: postgres-publisher-service
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distcomp
      POSTGRES_AUTH_METHOD: TRUST
      PGDATA: /data/postgres
    ports:
      - "5432:5432" 

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  cassandra:
    image: cassandra
    ports:
      - "9042:9042"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  discussion:
    image: ${DOCKER_REGISTRY-}discussion
    container_name: discussion
    build:
      context: .
      dockerfile: Discussion/Dockerfile
    ports:
      - "24130:8080"
    depends_on:
      - cassandra
      - kafka

