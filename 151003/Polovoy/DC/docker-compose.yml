version: '3.4'

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distcomp
    ports:
      - 5432:5432

  cassandra:
    image: cassandra
    container_name: cassandra
    ports:
      - 9042:9042
    volumes:
      - ~/apps/cassandra:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=cluster_by

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper

  discussion:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=24130
    image: ${DOCKER_REGISTRY-}discussion
    build:
      context: .
      dockerfile: Discussion/Dockerfile
    ports:
      - 24130:24130
    depends_on:
      - cassandra
      - kafka

  publisher:
    image: ${DOCKER_REGISTRY-}publisher
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=24110
    build:
      context: .
      dockerfile: Publisher/Dockerfile
    ports: 
      - 24110:24110
    depends_on:
      - kafka
      - postgres
      - redis

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
